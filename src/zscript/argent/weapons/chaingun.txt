// --------------------------------------------------------------------------
//
// ARGENT: Chaingun
//
// --------------------------------------------------------------------------

class ArgChaingun : ArgModWeapon
{
	int spinStage;

	Default
	{
		Weapon.SelectionOrder 2;
		Weapon.AmmoUse 1;
		Weapon.AmmoUse2 1;
		Weapon.AmmoGive 20;
		Weapon.AmmoType "Clip";
		Weapon.AmmoType2 "Clip";
		Inventory.Icon "graphics/hud/weapon-chaingun.png";
		Inventory.PickupMessage "$ARG_GOT_CHAINGUN";
		Tag "$ARG_TAG_CHAINGUN";
		Obituary "$ARG_OB_CHAINGUN";
		DamageType "ArgChaingun";

		ArgModWeapon.Mod1Tag "$ARG_MOD_TAG_CHAINGUN_1";
		ArgModWeapon.Mod1Description "$ARG_MOD_DESC_CHAINGUN_1";
		ArgModWeapon.Mod1Icon "$ARG_MOD_ICON_CHAINGUN_1";
		ArgModWeapon.Mod1Pic "$ARG_MOD_PIC_CHAINGUN_1"; 

		ArgModWeapon.Mod2Tag "$ARG_MOD_TAG_CHAINGUN_2";
		ArgModWeapon.Mod2Description "$ARG_MOD_DESC_CHAINGUN_2";
		ArgModWeapon.Mod2Icon "$ARG_MOD_ICON_CHAINGUN_2";
		ArgModWeapon.Mod2Pic "$ARG_MOD_PIC_CHAINGUN_2"; 
	}
	States
	{
	Spawn:
		CHGP A -1;
		Stop;
	Ready:
		CHGG A 0;
		Goto Super::Ready;
	Deselect:
		"####" "#" 0 {
			A_SetSpeed(1.0);
			A_StopSound(CHAN_WEAPON);
			invoker.spinStage = 0;
		}
		Goto DeselectLoop;
		
	/* Unmodded + Primary */

	Mod0Select:
		CHGG A 0;
		Goto SelectLoop;
	Mod0Ready:
		CHGG A 0;
		Goto ReadyLoop;
	Mod0Fire:
		"####" E 0 Bright {
			Arg_A_GunFlash('Flash', "weapons/chaingun/fire", ARG_GF_ALTSOUND);
			A_FireBullets(5.6, 1.0, -1, 7, "ArgBulletPuff");
			
			// [XA] I hope to someday be able to resolve a string as a label.
			if(invoker.spinStage == 1) { return ResolveState("Mod0Anim1"); }
			if(invoker.spinStage == 2) { return ResolveState("Mod0Anim2"); }
			if(invoker.spinStage == 3) { return ResolveState("Mod0Anim3"); }
			if(invoker.spinStage == 4) { return ResolveState("Mod0Anim4"); }
			if(invoker.spinStage == 5) { return ResolveState("Mod0Anim5"); }
			if(invoker.spinStage == 6) { return ResolveState("Mod0Anim6"); }
			
			A_PlaySound("weapons/chaingun/spinup", CHAN_WEAPON);
			return ResolveState(null);
		}
		"####" E   1 Bright Arg_A_WeaponOffset(3.0, 3.0, 0.5);
		"####" A   1        Arg_A_WeaponOffset(2.0, 2.0, 0.5);
		"####" A   1        Arg_A_WeaponOffset(1.0, 1.0, 0.5);
		"####" B   1        Arg_A_WeaponOffset(0.0, 0.0, 0.0);
		"####" B   2;
		"####" CD  3;
		Goto Mod0FireEnd;
	Mod0Anim1:
		"####" E   1 Bright{Arg_A_WeaponOffset(3.0, 3.0, 0.5); A_PlaySound("weapons/chaingun/spinloop", CHAN_WEAPON, 1.0, 1); }
		"####" A   1        Arg_A_WeaponOffset(2.0, 2.0, 0.5);
		"####" B   1        Arg_A_WeaponOffset(1.0, 1.0, 0.5);
		"####" B   1        Arg_A_WeaponOffset(0.0, 0.0, 0.0);
		"####" CDA 2;
		Goto Mod0FireEnd;
	Mod0Anim2:
		"####" F   1 Bright Arg_A_WeaponOffset(3.0, 3.0, 0.5);
		"####" B   1        Arg_A_WeaponOffset(2.0, 2.0, 0.5);
		"####" C   1        Arg_A_WeaponOffset(1.0, 1.0, 0.5);
		"####" C   1        Arg_A_WeaponOffset(0.0, 0.0, 0.0);
		"####" D   2;
		"####" AB  1;
		Goto Mod0FireEnd;
	Mod0Anim3:
		"####" G   1 Bright Arg_A_WeaponOffset(3.0, 3.0, 0.5);
		"####" H   1 Bright Arg_A_WeaponOffset(2.0, 2.0, 0.5);
		"####" A   1        Arg_A_WeaponOffset(1.0, 1.0, 0.5);
		"####" B   1        Arg_A_WeaponOffset(0.0, 0.0, 0.0);
		"####" CD 1;
		Goto Mod0FireEnd;
	Mod0Anim4:
		"####" E   1 Bright Arg_A_WeaponOffset(3.0, 3.0, 0.7);
		"####" F   1 Bright Arg_A_WeaponOffset(2.0, 2.0, 0.6);
		"####" C   1        Arg_A_WeaponOffset(1.0, 1.0, 0.5);
		"####" D   1        Arg_A_WeaponOffset(0.0, 0.0, 0.0);
		"####" A   1;
		Goto Mod0FireEnd;
	Mod0Anim5:
		"####" F   1 Bright Arg_A_WeaponOffset(3.0, 3.0, 0.9);
		"####" G   1 Bright Arg_A_WeaponOffset(2.0, 2.0, 0.7);
		"####" H   1 Bright Arg_A_WeaponOffset(1.0, 1.0, 0.5);
		"####" A   1        Arg_A_WeaponOffset(0.0, 0.0, 0.0);
		Goto Mod0FireEnd;
	Mod0Anim6:
		"####" F   1 Bright Arg_A_WeaponOffset(3.0, 3.0, 0.9);
		"####" G   1 Bright{Arg_A_WeaponOffset(2.0, 2.0, 0.7); A_FireBullets(6.8, 1.0, -1, 7, "ArgBulletPuff"); A_PlaySound("weapons/chaingun/fire", CHAN_7, 0.5); }
		"####" H   1 Bright Arg_A_WeaponOffset(1.0, 1.0, 0.5);
		"####" E   1 Bright Arg_A_WeaponOffset(0.0, 0.0, 0.0);
		Goto Mod0FireEnd;
	Mod0FireEnd:
		"####" A 0 {
			Arg_A_WeaponOffset(0, 0);
			if(invoker.spinStage < 6) {
				invoker.spinStage += 1;
			}
			if(Arg_A_CheckAmmo()) {
				return A_Refire();
			}
		}
		"####" A 1 { invoker.spinStage = 0; }
		"####" BCD 1;
		"####" A 2 A_PlaySound("weapons/chaingun/spindown", CHAN_WEAPON);
		"####" BCD 2;
		Goto Ready;
	Flash:
		TNT1 A 1 Bright A_Light(2);
		TNT1 A 1 Bright A_Light(1);
		Goto LightDone;
		
	/* Mod 1: Gatling Rotator */
		
	Mod1Select:
		CH1G A 0;
		Goto SelectLoop;
	Mod1Raise:
		// Override ModSwapUp so we can start the hand animation early.
		CH1S A 1 Arg_A_WeaponOffset(-18, 84);
		CH1S A 1 Arg_A_WeaponOffset(-18, 72);
		CH1S A 1 Arg_A_WeaponOffset(-18, 60);
		CH1S B 1 Arg_A_WeaponOffset(-18, 48);
		CH1S C 1 Arg_A_WeaponOffset(-18, 36);
		CH1S D 1 Arg_A_WeaponOffset(-18, 24);
		CH1S E 1 Arg_A_WeaponOffset(-18, 12);
	Mod1Swap:
		CH1S F 1 Arg_A_WeaponOffset(-18,  0);
		CH1S GHI 1;
		CH1S J 1 A_PlaySound("weapons/chaingun/mod1swap", CHAN_AUTO);
		CH1S K 1 Arg_A_WeaponOffset(-19,  0);
		CH1S L 1 Arg_A_WeaponOffset(-20,  0);
		CH1S L 1 Arg_A_WeaponOffset(-20,  0);
		CH1S L 1 Arg_A_WeaponOffset(-20,  0);
		CH1S L 1 Arg_A_WeaponOffset(-20,  0);
		CH1S L 1 Arg_A_WeaponOffset(-19,  1);
		CH1S M 1 Arg_A_WeaponOffset(-17,  3);
		CH1S N 1 Arg_A_WeaponOffset(-14,  5);
		CH1S O 1 Arg_A_WeaponOffset(-15,  4);
		CH1S P 1 Arg_A_WeaponOffset(-16,  3);
		CH1S Q 1 Arg_A_WeaponOffset(-16,  1);
		CH1S N 1 Arg_A_WeaponOffset(-15,  0);
		CH1S O 1 Arg_A_WeaponOffset(-14,  0);
		CH1S P 1 Arg_A_WeaponOffset(-12,  0);
		CH1S Q 1 Arg_A_WeaponOffset(-10,  0);
		CH1S N 1 Arg_A_WeaponOffset(- 7,  0);
		CH1S O 1 Arg_A_WeaponOffset(- 3,  0);
		CH1S R 1 Arg_A_WeaponOffset(- 1,  0);
		CH1S R 1 Arg_A_WeaponOffset(  0,  0);
		CH1S S 1;
		CH1S S 1 Arg_A_WeaponOffset(- 1,  1);
		CH1S T 1 Arg_A_WeaponOffset(- 3,  3);
		CH1S T 1 Arg_A_WeaponOffset(- 7,  7);
		CH1S T 1 Arg_A_WeaponOffset(- 8,  8);
		CH1S T 1 Arg_A_WeaponOffset(- 6,  6);
		CH1S T 1 Arg_A_WeaponOffset(- 4,  4);
		CH1S U 1 Arg_A_WeaponOffset(- 2,  2);
		CH1S V 1 Arg_A_WeaponOffset(  0,  0);
		CH1S VWX 1;
	Mod1Ready:
		CH1G A 0;
		Goto ReadyLoop;
	Mod1Up:
	Mod1Hold:
		"####" A 3 {
			if(Arg_SynthFire()) {
				return ResolveState("Mod0Fire");
			} else {				
				if(invoker.spinStage == 1) { return ResolveState("Mod1Anim1"); }
				if(invoker.spinStage == 2) { return ResolveState("Mod1Anim2"); }
				if(invoker.spinStage == 3) { return ResolveState("Mod1Anim3"); }
				if(invoker.spinStage == 4) { return ResolveState("Mod1Anim4"); }
				if(invoker.spinStage == 5) { return ResolveState("Mod1Anim5"); }
				if(invoker.spinStage == 6) { return ResolveState("Mod1Anim6"); }
			
				A_PlaySound("weapons/chaingun/spinup", CHAN_WEAPON);
				return ResolveState(null);
			}
		}
		"####" BCD 3;
		Goto Mod0FireEnd;
	Mod1Anim1:
		"####" A 2 A_PlaySound("weapons/chaingun/spinloop", CHAN_WEAPON, 1.0, 1);
		"####" BCDA 2;
		Goto Mod0FireEnd;
	Mod1Anim2:
		"####" BCD 2;
		"####" AB  1;
		Goto Mod0FireEnd;
	Mod1Anim3:
		"####" CDABCD 1;
		Goto Mod0FireEnd;
	Mod1Anim4:
		"####" ABCDA 1;
		Goto Mod0FireEnd;
	Mod1Anim5:
	Mod1Anim6:
		"####" BCDA 1;
		Goto Mod0FireEnd;

	/* Mod 2: Mobile Turret */

	Mod2Select:
		CH2G A 0;
		Goto SelectLoop;
	Mod2Raise:
		CH2S A 0 A_WeaponOffset(-25, 0, WOF_KEEPY);
		Goto ModSwapUp;
	Mod2Swap:
		CH2S B 1 A_PlaySound("weapons/chaingun/mod2swap", CHAN_AUTO);
		CH2S CDE 1;
		CH2S F 1 Arg_A_WeaponOffset(-24, 0);
		CH2S G 1 Arg_A_WeaponOffset(-23, 0);
		CH2S H 1 Arg_A_WeaponOffset(-22, 0);
		CH2S I 1 Arg_A_WeaponOffset(-21, 0);
		CH2S J 5 Arg_A_WeaponOffset(-20, 0);
		CH2S K 1 Arg_A_WeaponOffset(-19, 0);
		CH2S L 1 Arg_A_WeaponOffset(-17, 3);
		CH2S L 1 Arg_A_WeaponOffset(-13, 6);
		CH2S L 2 Arg_A_WeaponOffset(-12, 6);
		CH2S L 1 Arg_A_WeaponOffset(-13, 6);
		CH2S M 1 Arg_A_WeaponOffset(-14, 4);
		CH2S N 1 Arg_A_WeaponOffset(-18, 2);
		CH2S O 1 Arg_A_WeaponOffset(-19, 1);
		CH2S P 1 Arg_A_WeaponOffset(-20, 0);
		CH2S Q 1;
		CH2S R 1 Arg_A_WeaponOffset(-19, 0);
		CH2S S 1 Arg_A_WeaponOffset(-17, 0);
		CH2M B 1 Arg_A_WeaponOffset(-13, 0);
		CH2S Q 1 Arg_A_WeaponOffset(-10, 0);
		CH2S R 1 Arg_A_WeaponOffset(- 7, 0);
		CH2S S 1 Arg_A_WeaponOffset(- 3, 0);
		CH2M B 1 Arg_A_WeaponOffset(- 1, 0);
		CH2S Q 1 Arg_A_WeaponOffset(  0, 0);
		CH2S R 1 Arg_A_WeaponOffset(  1, 1);
		CH2S S 1 Arg_A_WeaponOffset(  3, 3);
		CH2M A 1 Arg_A_WeaponOffset(  4, 4);
		CH2M A 1 Arg_A_WeaponOffset(  2, 2);
		CH2G A 1 Arg_A_WeaponOffset(  1, 1);
	Mod2Ready:
		CH2G A 0;
		Goto ReadyLoop;
	Mod2Up:
		CH2M A 1 {
			A_SetSpeed(0.5);
			A_PlaySound("weapons/chaingun/mod2up", CHAN_AUTO);
		}
		CH2M B 1 Arg_A_WeaponOffset(  1,  0);
		CH2M B 1 Arg_A_WeaponOffset(  3,  2);
		CH2M B 2 Arg_A_WeaponOffset(  4,  4);
		CH2M C 1;
		CH2M C 1 Arg_A_WeaponOffset(  6,  6);
		CH2M D 1 Arg_A_WeaponOffset(  5,  5);
		CH2M D 1 Arg_A_WeaponOffset(  3,  3);
		CH2M D 1 Arg_A_WeaponOffset(  1,  1);
		CH2M D 1 Arg_A_WeaponOffset(  0,  0);
		CH2M D 4;
		CH2M D 1 Arg_A_WeaponOffset(- 2,  0);
		CH2M E 1 Arg_A_WeaponOffset(- 4,  0);
		CH2M F 1 Arg_A_WeaponOffset(-10,  0);
		CH2N A 1 Arg_A_WeaponOffset(-15, -4);
		CH2N A 1 Arg_A_WeaponOffset(-18, -6);
		CH2N A 1 Arg_A_WeaponOffset(-20, -8);
	Mod2Hold:
		CH2N A 1 Arg_A_SynthFire("Mod2Fire");
		CH2N A 0 A_Refire();
	Mod2Down:
		CH2N A 3 {
			A_SetSpeed(1.0);
			A_PlaySound("weapons/chaingun/mod2down", CHAN_AUTO);
		}
		CH2N A 1 Arg_A_WeaponOffset(-18, -6);
		CH2N A 1 Arg_A_WeaponOffset(-15, -4);
		CH2M F 1 Arg_A_WeaponOffset(-10,  0);
		CH2M E 1 Arg_A_WeaponOffset(- 4,  0);
		CH2M D 9 Arg_A_WeaponOffset(  0,  0);
		CH2M C 1 Arg_A_WeaponOffset(  1,  0);
		CH2M C 1 Arg_A_WeaponOffset(  3,  3);
		CH2M B 1 Arg_A_WeaponOffset(  6,  6);
		CH2M A 1 Arg_A_WeaponOffset(  4,  4);
		CH2M A 1 Arg_A_WeaponOffset(  2,  2);
		CH2G A 1 Arg_A_WeaponOffset(  1,  1);
		Goto Ready;
	Mod2Fire:
		CH2N E 0 A_PlaySound("weapons/chaingun/mod2fire", CHAN_WEAPON);
		CH2N EFGH 1 Bright Arg_A_ChaingunMod2Fire();
		CH2N E 0 Arg_A_ChaingunMod2Loop(true);
		Goto Mod2FireEnd;
	Mod2FireLoop:
		CH2N EFGH 1 Bright Arg_A_ChaingunMod2Fire();
		CH2N E 0 Arg_A_ChaingunMod2Loop(false);
	Mod2FireEnd:
		CH2N A 1 {
			Arg_A_WeaponOffset(-20, -8);
			A_PlaySound("weapons/chaingun/spindown", CHAN_WEAPON);
		}
		CH2N BCD 1;
		CH2N ABCD 2;
		CH2N A 0 Arg_A_JumpIfNoAmmo("Mod2Down");
		CH2N A 0 A_Refire();
		Goto Mod2Down;
	CrazyFlash:
		TNT1 A 1 Bright A_Light(random(0,2));
		Goto LightDone;
	}
	
	/*
	 * Mod 2 (Mobile Turret) firing/looping functions, for DRY's sake.
	 */
	action state Arg_A_ChaingunMod2Fire() {
		Arg_A_GunFlash('CrazyFlash');
		Arg_A_WeaponOffset(-20, -6, -1.5, -1.0);
		A_FireBullets(5.6, 1.0, -1, 7, "ArgBulletPuff");
		A_Quake(1, 2, 0, 8, "");
		return Arg_A_JumpIfNoAmmo("Mod2FireEnd");
	}
	action state Arg_A_ChaingunMod2Loop(bool sound) {
		if(Arg_SynthFire(true)) {
			if(sound) {
				A_PlaySound("weapons/chaingun/mod2loop", CHAN_WEAPON, 1.0, 1);
			}
			return ResolveState("Mod2FireLoop");
		}
		return ResolveState(null);
	}
}
