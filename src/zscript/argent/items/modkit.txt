// --------------------------------------------------------------------------
//
// ARGENT: Weapon Mod Kit
//
// --------------------------------------------------------------------------

class ArgModKit : CustomInventory replaces Backpack
{
	bool active;
	int merchPage;

	Default
	{
		Scale 0.66;
		Inventory.PickupMessage "$ARG_GOT_MOD_KIT";
		Inventory.PickupSound "items/modkit/pickup";
		Inventory.MaxAmount 999;
		Inventory.Icon "graphics/hud/equip-icon-modkit.png";
		Tag "$ARG_TAG_MODKIT";

		+INVENTORY.FANCYPICKUPSOUND
		+INVENTORY.INVBAR
	}
	States
	{
	Spawn:
		MODK A 5 Bright;
		MODK A 30;
		Loop;
	Use:
		TNT1 A 0 Arg_A_UseModKit();
		Stop;
	}

	/*
	 * Mod Kit Interface of Awesome.
	 */
	action bool Arg_A_UseModKit()
	{
		// First, check if we already have all mods. If so, trade the kit for
		// a backpack and return.
		// [TODO] remove this shortcut entirely when Equipment arrives.
		let player = ArgPlayer(self);
		if(player && player.modTotal >= player.MOD_MAX) {
			A_GiveInventory("Backpack", 1);
			A_TakeInventory("ArgModKit", 1);
			A_PlaySound("items/modkit/pickup", CHAN_AUTO);
			return true; // remove the item.

		} else if (invoker.active) {
			// kit already active. Deactivate it.
			A_PlaySound("items/modkit/dismiss", CHAN_AUTO);
			invoker.active = false;

		} else {
			// kit not yet active. Activate it.
			A_PlaySound("items/modkit/use", CHAN_AUTO);
			invoker.active = true;
		}
		return false; // do not remove if just activating/deactivating the kit.
	}
	
	/*
	 * Cycle forward/backward through the list of merch grantable by the kit.
	 */
	action bool Arg_A_CycleModKit()
	{
		if(invoker.active) {
			A_PrintBold("[TODO] cycle da kit");
			return true;

		} else {
			return false;
		}
	}
	
	/*
	 * Apply the mod-kit (if applicable ;), granting the specified piece of merch.
	 *
	 * Yeah, "Use" vs "Apply" is a bit confusing, but the former term is "Use
	 * in the Inventory sense, so there you go. ;)
	 */
	action bool, bool Arg_A_ApplyModKit(int index, ArgModWeapon weapon)
	{
		if(invoker.active && invoker.merchPage > 0) {
			// Install merch.
			A_PrintBold("[TODO] install merch");
			return false, false;

		} else if(invoker.active && weapon && !weapon.mod[index].enabled) {
			// Install a mod.

			// "gift" the mod and signal the calling state to jump to the
			// mod swap animation.
			weapon.mod[index].enabled = true;
			weapon.modSelected = index;

			// increase the total mod count
			// [TODO] remove at some point.
			let player = ArgPlayer(self);
			if(player) {
				player.modTotal++;
			}

			// dismiss the Mod Kit interface
			invoker.active = false;

			// signal the calling weapon to consume the kit and
			// begin a mod swap animation.
			return true, true;

		} else {
			return false, false;
		}
	}

	/*
	 * SPOOOOOON!
	 */
	override void Tick()
	{
		Super.Tick();
		let player = ArgPlayer(self.owner);

		// allow players to dismiss the mod kit menu by pressing 'use'
		if(self.active && player && (player.GetPlayerInput(INPUT_BUTTONS) & BT_USE)) {
			player.A_PlaySound("items/modkit/dismiss", CHAN_AUTO);
			self.active = false;
		}
	}
}
