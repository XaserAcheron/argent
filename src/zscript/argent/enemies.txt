// --------------------------------------------------------------------------
//
// ARGENT: Monster Edits
//
// --------------------------------------------------------------------------

class ArgZombieman : Zombieman replaces Zombieman
{
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		POSS M 3;
		POSS N 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 5, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 24, 3, 5); }
		POSS O 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 2, ARG_TG_FALL                 ,  2, 24, 2, 3); }
		POSS PQRST 3;
	Dead:
		POSS U -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgShotgunGuy : ShotgunGuy replaces ShotgunGuy
{
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		SPOS M 3;
		SPOS N 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 5, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 24, 3, 5); }
		SPOS O 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 2, ARG_TG_FALL                 ,  2, 24, 2, 3); }
		SPOS PQRST 3;
	Dead:
		SPOS U -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgChaingunGuy : ChaingunGuy replaces ChaingunGuy
{
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		CPOS O 3 ;
		CPOS P 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 5, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 24, 3, 5); }
		CPOS Q 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 2, ARG_TG_FALL                 ,  2, 24, 2, 3); }
		CPOS RS 3;
	Dead:
		CPOS T -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgImp : DoomImp replaces DoomImp
{
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		TROO N 3;
		TROO O 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 5, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 24, 3, 5); }
		TROO P 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 2, 0           ,  2, 24, 2, 3); }
		TROO Q 3 A_NoBlocking;
		TROO RST 3;
	Dead:
		TROO U -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgDemon : Demon replaces Demon
{
	Default
	{
		Stamina 4; // mock "stun seconds" property. :P
		// [XA] I'll be able to replace that with Custom Properties once
		// the next release hits. Whew!
	}
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		SARG O 3;
		SARG P 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 7, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 24, 3, 5); }
		SARG Q 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 2, ARG_TG_FALL                 ,  2, 24, 2, 3); }
		SARG RSTUV 3;
	Dead:
		SARG W -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgSpectre : ArgDemon replaces Spectre
{
	Default
	{
		Alpha 0.5;
		RenderStyle 'OptFuzzy';
		SeeSound "spectre/sight";
		AttackSound "spectre/melee";
		PainSound "spectre/pain";
		DeathSound "spectre/death";
		ActiveSound "spectre/active";
		HitObituary "$OB_SPECTREHIT";

		+SHADOW
	}
}

class ArgSoul : LostSoul replaces LostSoul
{
	Default
	{
		Stamina 4;
	}
	States
	{
	Death:
	XDeath:
		SKUL F 3 Bright;
		SKUL G 3 Bright { ArgCommon.TossGibs(self, 'ArgGibSmall', 4, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 16, 3, 5); }
		SKUL H 3 Bright { ArgCommon.TossGibs(self, 'ArgGibLarge', 2, ARG_TG_FALL                 ,  2, 16, 2, 3); }
		SKUL I 3 Bright;
		SKUL J 3;
	Dead:
		SKUL K 3;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgCaco : Cacodemon replaces Cacodemon
{
	Default
	{
		Stamina 4;
		Bloodcolor "Blue";
	}
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		HEAD M 3 A_NoGravity;
		HEAD N 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 9, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 32, 3, 5); }
		HEAD O 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 5, ARG_TG_FALL                 ,  2, 32, 2, 3); }
		HEAD P 3;
		HEAD Q 2 A_Gravity;
		HEAD RSTUVW 2;
		HEAD X 0 A_PlaySound("effects/gore");
	Dead:
		HEAD X -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgKnight : HellKnight replaces HellKnight
{
	Default
	{
		Stamina 4;
		Bloodcolor "00 A0 00";
	}
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		BOS2 P 3;
		BOS2 Q 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 9, ARG_TG_SOUND | ARG_TG_SCREAM,  8, 32, 3, 5); }
		BOS2 R 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 5, ARG_TG_FALL                 ,  5, 32, 2, 3); }
		BOS2 STU 3;
	Dead:
		BOS2 V -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgBaron : BaronOfHell replaces BaronOfHell
{
	Default
	{
		Stamina 3;
		Bloodcolor "00 A0 00";
	}
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		BOSS P 3;
		BOSS Q 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 9, ARG_TG_SOUND | ARG_TG_SCREAM,  8, 32, 3, 5); }
		BOSS R 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 5, ARG_TG_FALL                 ,  5, 32, 2, 3); }
		BOSS STU 3;
	Dead:
		BOSS V -1 A_BossDeath;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgRevenant : Revenant replaces Revenant
{
	Default
	{
		Stamina 4;
	}
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		SKEL R 3;
		SKEL S 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 9, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 32, 3, 5); }
		SKEL T 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 5, ARG_TG_FALL                 ,  2, 32, 2, 3); }
		SKEL U 3 A_NoBlocking;
		SKEL VWX 3;
	Dead:
		SKEL Y -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgMancubus : Fatso replaces Fatso
{
	Default
	{
		Stamina 3;
	}
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		FATG A 3;
		FATG B 3 A_Scream;
		FATG C 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 8, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 32, 3, 5); }
		FATG D 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 5, ARG_TG_FALL                 ,  2, 32, 2, 3); }
		FATG EFGHI 3;
	Dead:
		FATG J -1 A_BossDeath;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgArachnotron : Arachnotron replaces Arachnotron
{
	Default
	{
		Stamina 3;
	}
	States
	{
	Death:
	XDeath:
		BSPI J 20 A_Scream;
		BSPI K 4 { ArgCommon.TossGibs(self, 'ArgGibSmall', 8, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 32, 3, 5); }
		BSPI L 4 { ArgCommon.TossGibs(self, 'ArgGibLarge', 5, ARG_TG_FALL                 ,  2, 32, 2, 3); }
		BSPI M 4 A_NoBlocking;
		BSPI NO 4;
	Dead:
		BSPI P -1 A_BossDeath;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgElemental : PainElemental replaces PainElemental
{
	Default
	{
		Stamina 4;
	}
	States
	{
	Death:
	XDeath:
		PAIN H 8 Bright;
		PAIN I 8 Bright A_Scream;
		PAIN JK 8 Bright;
		PAIN L 8 Bright { ArgCommon.TossGibs(self, 'ArgGibSmall', 9, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 32, 3, 5); A_PainDie(); }
		PAIN M 0 Bright { ArgCommon.TossGibs(self, 'ArgGibLarge', 5, ARG_TG_FALL                 ,  5, 32, 2, 3); }
	Dead:
		PAIN M 8 Bright;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgVile : Archvile replaces Archvile
{
	Default
	{
		Stamina 3;
	}
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		VILG A 3;
		VILG B 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 8, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 32, 3, 5); }
		VILG C 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 5, 0                           ,  2, 32, 2, 3); }
		VILG D 3 A_NoBlocking;
		VILG EFGH 3;
	Dead:
		VILG I -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgCyberDAMN : Cyberdemon replaces Cyberdemon
{
	Default
	{
		Stamina 2;
		DropItem "ArgGaussCannon";
		DamageFactor "ArgPlayerRocket", 0.66;
		DamageFactor "ArgCyberRocket" , 0.5;
	
		-NORADIUSDMG;
		+DONTHARMSPECIES;
	}
	
	States
	{
	Pain:
		CYBR G 5;
		CYBR G 5 A_Pain;
		Goto See;
	Death:
	XDeath:
		CYBR H 5;
		CYBR I 5 { ArgCommon.TossGibs(self, 'ArgGibSmall', 16, ARG_TG_SOUND | ARG_TG_SCREAM, 20, 56, 3, 5); }
		CYBR J 5 { ArgCommon.TossGibs(self, 'ArgGibLarge', 10, 0                           , 16, 56, 2, 3); }
		CYBR K 5;
		CYBR L 5 { ArgCommon.TossGibs(self, 'ArgGibSmall', 16, 0                           , 20, 56, 3, 5); }
		CYBR M 5 { ArgCommon.TossGibs(self, 'ArgGibLarge', 10, ARG_TG_FALL                 , 16, 56, 2, 3); }
		CYBR NO 5;
		CYBR P 30;
	Dead:
		CYBR P -1 A_BossDeath;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgGoddamnCyberdemonRocket : ArgRocketBase replaces Rocket
{
	Default
	{
		DamageType "ArgCyberRocket";
		SeeSound "enemies/cyberdemon/attack";
		Damage 20;
		Speed 20;
	}
	States
	{
	Spawn:
		MISL A 1 Bright;
		Loop;
	Death:
		REXP A 4 Bright {
			A_SetScale(1.0);
			A_Explode(128, 128, 0); // cybie self-immunity
		}
		Goto Boom;
	}
}

class ArgSPIDARS_AAAH_KILL_IT_WITH_FIRE : SpiderMastermind replaces SpiderMastermind
{
	Default
	{
		Stamina 2;
		DropItem "ArgChaingun";
		DamageFactor "ArgPlayerRocket", 0.66;
		DamageFactor "ArgCyberRocket" , 0.5;
	
		-NORADIUSDMG
	}
	States
	{
	Death:
	XDeath:
		SPID J 20 A_Scream;
		SPID K 5 A_NoBlocking;
		SPID LM 5;
		SPID N 5 { ArgCommon.TossGibs(self, 'ArgGibSmall', 16, ARG_TG_SOUND, 48, 32, 3, 5); }
		SPID O 5 { ArgCommon.TossGibs(self, 'ArgGibLarge', 10, 0           , 32, 32, 2, 3); }
		SPID P 5 { ArgCommon.TossGibs(self, 'ArgGibSmall', 16, 0           , 48, 32, 3, 5); }
		SPID Q 5 { ArgCommon.TossGibs(self, 'ArgGibLarge', 10, ARG_TG_FALL , 32, 32, 2, 3); }
		SPID R 5;
		SPID S 30;
	Dead:
		SPID S -1 A_BossDeath;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}

class ArgNazi : WolfensteinSS replaces WolfensteinSS
{
	States
	{
	Death:
		"####" "#" 0 { return ArgCommon.GibCheck(self); }
		Goto Super::Death;
	XDeath:
		SSWV N 3;
		SSWV O 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 5, ARG_TG_SOUND | ARG_TG_SCREAM, 10, 24, 3, 5); }
		SSWV P 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 2, ARG_TG_FALL                 ,  2, 24, 2, 3); }
		SSWV QRSTU 3;
	Dead:
		SSWV V -1;
		Stop;
	Death.Massacre:
		"####" "#" 0 A_NoBlocking;
		Goto Dead;
	}
}
