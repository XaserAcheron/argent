// --------------------------------------------------------------------------
//
// ARGENT: Player Definition
//
// --------------------------------------------------------------------------

class ArgPlayer : DoomPlayer
{
	ArgEquipment activeEquipment; // temp.storage location

	Default
	{
		Player.DisplayName "Doom Marine";
		Player.StartItem "ArgPistol";
		Player.StartItem "ArgFist";
		Player.StartItem "Clip", 50;
		Player.WeaponSlot 1, 'ArgFist', 'ArgChainsaw';
		Player.WeaponSlot 2, 'ArgPistol';
		Player.WeaponSlot 3, 'ArgShotgun', 'ArgSuperShotgun';
		Player.WeaponSlot 4, 'ArgHeavyAR', 'ArgChaingun';
		Player.WeaponSlot 5, 'ArgRocketLauncher';
		Player.WeaponSlot 6, 'ArgPlasmaRifle', 'ArgGaussCannon';
		Player.WeaponSlot 7, 'ArgBFG9000';
	
		DamageFactor "ArgPlayerRocket", 0.5;
		DamageFactor "ArgBFGZapper", 0.0;
	}
	States
	{
	Death:
		"####" "#" 0 A_JumpIf(GetCvar("arg_alwaysgib"), "XDeath");
		Goto Super::Death;
	XDeath:
		PLAY O 3;
		PLAY P 3 { ArgCommon.TossGibs(self, 'ArgGibSmall', 9, ARG_TG_SOUND, 10, 24, 3, 5); A_PlaySound("*xdeath"); }
		PLAY Q 3 { ArgCommon.TossGibs(self, 'ArgGibLarge', 4, ARG_TG_FALL ,  2, 24, 2, 3); }
		PLAY RSTUV 3;
	Death.Massacre:
		PLAY W -1;
		Stop;
	}
	
	/*
	 * Grant a piece of merch to the player. This is done here since Weird Things(tm)
	 * were happening when trying to gift an inventory item from another item
	 * (probably some self pointer shenanigans).
	 */
	bool Arg_GrantEquipment(class<Inventory> equipment, int amount = 1)
	{
		// [TODO] make sure we don't gift over the max amount.
		// [TODO] more fancy stuff here.
		if(equipment) {
			GiveInventory(equipment, amount);
			return true;
		}
		return false;
	}
}
